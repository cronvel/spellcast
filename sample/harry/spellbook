
[[doctype spellcast/book]]

[profile]
	# This define how to display the profile of characters.
	# $this.targetCharacter contains the character of the profile
	# $this.character contains the character viewing the profile
	[if $this.targetCharacter = $this.character]
		[entry $this.targetCharacter.willPower] willPower
		[entry $this.targetCharacter.arcane] arcane
		
	[message] $> ${this.targetCharacter.description}



[aside stats]
	# This defines a tab with an ID.
	# There are executed out of the main flow.
	# When they are refreshed (by the user, or each time the tab is opened, or whatever), they are executed again from the start.
	# This means that they should be idempotent on reload.
	
	[entry $this.character.willPower] willPower
	[entry $this.character.arcane] arcane
	
	[message] $> ${this.character.background}
	[message] $> ${this.character.description}
	
	# A bar of life
	[entry-bar $this.character.health] health
	# A bar of mana
	[entry-bar $this.character.mana] mana



[aside inventory]
	
	[action equip-sword]
		[set $this.character.hands] $weapons.sword
		


[character-list]
	[character harry]
		name: Harry
	[character ron]
		name: Ron
	[character hermione]
		name: Hermione
		actions:
			- sing
	
	[character dumbledore]
		npc: true
		name: Dumbledore
	[character snap]
		npc: true
		name: Snap



[action sing]
	[command] sing
	[icon] sing.png
	[label] sing
	
	# regular actions
	[message]
		$> ${this.character.name} sings a magnificient song...



[chapter intro]
	
	[title]
	
	[scene intro]
		[music] sorrow.mp3
		[image] scene image, most of time in the background, or cover half of the screen
		[pause 1.5] pause the scene for 1.5 seconds
		[message]
			Blah blah blah.
		[next intro2]

	[scene intro2]
		
		[split]
			[timeout] 100
			[gosub guys]
				- harry
				- ron
			[gosub girl]
				- hermione
		
		[next intro3]

	[scene intro3]
		[message]
			Blah.
		
		# [on] are destroyed when leaving a [scene]
		[on chat]
			# [goto] go immediately to this scene
			[goto kaboom]
		
		# [persistent-on] are not destroyed
		
		[everyone] / [majority] / [absolute-majority] / [relative-majority] 
		
		# next use [majority] by default
		[next left]
			[label] Go to the left road.
			# Whenever one player choose it, it is acted immediately
			[immediate] ?
			
			[on-select] ?
				# action code
				# $this.character contains the player that used it
			
			[on-trigger] ?
				# action code
				# $this.characters <- S
			
		[next right]
			[label] Go to the right road.
			[everyone] ?
			[majority] ?
			[absolute-majority] ?
			[relative-majority] ?
			
			[type majority] ?
			
			[deselectable] ?
			
			[default 10]
			


[quest supa-quest]
	# This is just like an independent book. The execution can run the quest, leave it to the main-line, then resume
	# to its exact position. [quest] tags constain [scene] tags. 
	# In the main story line, the [resume-quest] tag is used to resume it.
	# While [gosub] works like a kind of *function*, [quest] works more like a *generator*.

	[scene intro]
		# ...		

