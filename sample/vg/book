[[doctype spellcast/book]]

[system card]
	[fn layout]
		[font-pack serif]
			regular: /fonts/serif.ttf

		[vg $.vg]
			[attr]
				viewbox:
					x: 0
					y: 0
					width: 400
					height: 600

			# The card border
			[vg-rect]
				x: 0
				y: 0
				r: 10
				width: 400
				height: 600
				style:
					stroke: #444
					fill: #fff

			# The image
			[vg-image]
				x: 20
				y: 320
				width: 360
				height: 260
				aspect: preserve
				url: /sprites/shaman.png

			# The image rectangle
			[vg-rect]
				x: 20
				y: 320
				r: 5
				width: 360
				height: 260
				style:
					stroke: #444
					fill: none

			# The text rectangle
			[vg-rect]
				x: 20
				y: 20
				r: 5
				width: 360
				height: 260
				style:
					stroke: #444
					fill: #6d6

			# The text
			[vg-flowing-text]
				x: 25
				y: 25
				width: 350
				height: 250
				text-wrapping: wordwrap
				attr:
					font-size: 24
					color: #000
					outline: yes
				markup-text:
					>> ^RThis^ is a placeholder text, it should contain the card description,
					>> its rules description, and eventually it's lore.

		[return] $.vg


[chapter tests]
	[theme] > /themes/educa
	
	[starting-scene menu]
		[next vg] vg
		[next vg-path] vg-path
		[next vg-flowing-text] vg-flowing-text
		[next card] card
	
	[scene card]
		[call card/layout => $.vg]
		[g-create vg vg]
			vg-object: $.vg
			size:
				xy: 1
			position:
				x: 0
				y: 0
		[next menu]

	[scene vg-flowing-text]
		[font-pack serif]
			regular: /fonts/serif.ttf
		[font-pack serif]
			regular: /fonts/serif.ttf

		[vg $.vg]
			[attr]
				invert-y: no
				viewbox:
					x: 0
					y: 0
					width: 300
					height: 200

			[vg-rect]
				x: 10
				y: 10
				r: 10
				width: 280
				height: 180
				style:
					stroke: none
					fill: #777

			[vg-flowing-text]
				x: 20
				y: 20
				width: 260
				height: 160
				text-wrapping: wordwrap
				clip: no
				attr:
					font-size: 40
					color: blue
					outline: yes
				structured-text:
					-	text: "Un "
					-	text: Bobby
						attr:
							color: red
							#underline: yes
							#line-color: #599
							frame: yes
							frame-corner-radius: 0.1em
							frame-color: #557
							frame-outline-width: 0.1em
							frame-outline-color: #66e
					-	text: Dragon

		[g-create vg vg]
			vg-object: $.vg
			size:
				xy: 1
			position:
				x: 0
				y: 0
			
		[next menu]

	[scene vg]
		[vg $.vg]
			[attr]
				css:
					-	select: .hoverable
						style:
							transition: all 1s
							fill: blue
							cursor: pointer
					-	select: .hoverable:hover
						style:
							transform: scale( 1.5 )
							fill: crimson
				style:
					pointer-events: painted
				viewbox:
					x: 0
					y: 0
					width: 200
					height: 200
			
			[set $local.x] 25
			[while $local.x < 175]
				[set $local.y] 25
				[while $local.y < 175]
					#[vg-rect]
					[vg-ellipse]
						#x: $local.x
						#y: $local.y
						#width: 30
						#height: 30
						x: $local.x
						y: $local.y
						r: 15
						class: hoverable
						style:
							stroke: none
					[set $local.y] $= $local.y + 40
				[set $local.x] $= $local.x + 40
					
		#[debug hdebug] $.vg

		[g-create vg vg]
			vg-object: $.vg
			size:
				xy: 0.5
			position:
				x: 0
				y: 0

		[pause] 1

		[vg-morph $.vg.entities[0]]
			style:
				fill: orange
		[g-update vg]
			vg-morph: $.vg

		[pause] 1

		[vg-morph $.vg.entities[0]]
			style:
				fill: green
		[g-update vg]
			vg-morph: $.vg

		[next menu]


	[scene vg-path]
		[vg $.vg]
			[attr]
				viewbox:
					x: -10
					y: -10
					width: 220
					height: 220
			[vg-path]
				[attr]
					style:
						fill: green

				[vg-move-to]
					x: 50
					y: 50
				#[vg-turn-to] 10
				
				[set $local.i] 0
				[while $local.i < 5]
					[vg-forward] 100
					[vg-turn] 144
					[inc $local.i]

			[vg-path]
				[attr]
					style:
						fill: none
						stroke: red
						stroke-width: 5

				[vg-move-to]
					x: 50
					y: 0
				[vg-forward] 100
				#[vg-turn-to] -60
				[vg-forward-right]
					l: 50
					a: 160
				[vg-forward] 50

			[vg-path]
				[attr]
					style:
						fill: none
						stroke: blue
						stroke-width: 5

				[vg-move-to]
					x: 0
					y: 100
				[vg-qcurve-to]
					cx: 0
					cy: 200
					x: 100
					y: 200
				[vg-smooth-qcurve-to]
					x: 200
					y: 100
				[vg-smooth-qcurve-to]
					x: 100
					y: 0
				[vg-smooth-qcurve-to]
					x: 0
					y: 100
					
				
		[g-create vg vg]
			vg-object: $.vg
			size:
				xy: 0.8
			position:
				x: 0
				y: 0

		[next menu]


