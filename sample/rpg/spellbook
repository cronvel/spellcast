
[[doctype adventure]]

[action drink]
	[message]
		$> You drink a cup of vine...

[entity-model player]
	class: character
	label: the hero
	stats:
		damageBase: 0
		damageDice: 1
		damageFaces: 4
		melee: 16
	status:
		hp: 20
		xp: 0

[entity-model guardian]
	class: character
	label: the guardian
	stats:
		xpReward: 10
		damageBase: 2
		damageDice: 1
		damageFaces: 4
		melee: 14
	status:
		hp: 20

[role hero]
	[label] You
	[entity] player



[chapter intro]
	[scene intro]
		[subscene battle/init]
			[args]
				foes:
					- guardian



[chapter battle]
	[scene init]
		#[message] $> Hello ${roles.hero.entity.label}
		[set $this.hero] $roles.hero.entity
		[set $this.heroTurn] true
		[set $this.heroSkip] 0
		[create-entity $this.enemy] $args.foes[0]
		[next initiative]
	
	[scene initiative]
		[set $this.heroScore] $= $this.hero.stats.melee + ( 2 D 6 )
		[set $this.enemyScore] $= $this.enemy.stats.melee + ( 2 D 6 )
		
		[if $this.heroScore >= $this.enemyScore]
			[message] $> ${this.hero.label//uc1} take the initiative.
			[set $this.heroTurn] true
			[goto hero-turn]
		[else]
			[message] $> ${this.enemy.label//uc1} take the initiative.
			[set $this.heroTurn] false
			[goto enemy-turn]
		
		[goto new-turn]
		
	
	
	[scene new-turn]
		[if $this.heroTurn]
			[goto hero-turn]
		[else]
			[goto enemy-turn]
	
	[scene end-turn]
		[if $this.hero.status.hp <= 0]
			[goto lose]
		[elseif $this.enemy.status.hp <= 0]
			[goto win]
		[goto new-turn]
	
	
	[scene hero-turn]
		[if $this.heroSkip > 0]
			[set $this.heroSkip] $= $this.heroSkip - 1
			[goto enemy-turn]
		
		[next hero-melee]
			[label] Melee attack.
	
		[next hero-charge-melee]
			[label] Charge!
	
	
	[scene melee]
		[set $this.attackScore] $= $args.attacker.stats.melee + ( 2 D 6 )
		[set $this.defenseScore] $= $args.defender.stats.melee + ( 2 D 6 )
		
		[if $this.attackScore > $this.defenseScore]
			#[message] $> ${this.hero.stats.damageBase} + ${this.hero.stats.damageDice} D ${this.hero.stats.damageFaces}
			[set $this.damages] $= $args.attacker.stats.damageBase + ( $args.attacker.stats.damageDice D $args.attacker.stats.damageFaces )
			[message] $> ^y${args.attacker.label//uc1} hit ${args.defender.label} for ${this.damages} hp.
			[set $args.defender.status.hp] $= $args.defender.status.hp - $this.damages
			[if $args.defender.status.hp <= 0]
				[message] $> ${args.defender.label//uc1} is dead.
		[else]
			[message] $> ${args.attacker.label//uc1} miss ${args.defender.label}.
	
	
	[scene hero-melee]
		[subscene melee]
			[args]
				attacker: $this.hero
				defender: $this.enemy
		[goto end-turn]
	
	
	[scene hero-melee_old]
		[set $this.attackScore] $= $this.hero.stats.melee + ( 2 D 6 )
		[set $this.defenseScore] $= $this.enemy.stats.melee + ( 2 D 6 )
		
		#[message] $> ${this.attackScore} vs ${this.defenseScore}
		
		[if $this.attackScore > $this.defenseScore]
			#[message] $> ${this.hero.stats.damageBase} + ${this.hero.stats.damageDice} D ${this.hero.stats.damageFaces}
			[set $this.damages] $= $this.hero.stats.damageBase + ( $this.hero.stats.damageDice D $this.hero.stats.damageFaces )
			[message] $> ^y${this.hero.label//uc1} hit ${this.enemy.label} for ${this.damages} hp.
			[set $this.enemy.status.hp] $= $this.enemy.status.hp - $this.damages
			[if $this.enemy.status.hp <= 0]
				[message] $> ${this.enemy.label//uc1} is dead.
				[goto win]
		[else]
			[message] $> ${this.hero.label//uc1} miss ${this.enemy.label}.
		
		[goto enemy-turn]
	
	[scene hero-charge-melee]
		[set $this.heroSkip] 1
		[set $this.attackScore] $= ( $this.hero.stats.melee + 2 ) + ( 2 D 6 )
		[set $this.defenseScore] $= $this.enemy.stats.melee + ( 2 D 6 )
		
		[if $this.attackScore > $this.defenseScore]
			#[message] $> ${this.hero.stats.damageBase} + ${this.hero.stats.damageDice} D ${this.hero.stats.damageFaces}
			[set $this.damages] $= ( $this.hero.stats.damageBase + 2 ) + ( ( $this.hero.stats.damageDice + 1 ) D $this.hero.stats.damageFaces )
			[message] $> ^y${this.hero.label//uc1} hit ${this.enemy.label} for ${this.damages} hp.
			[set $this.enemy.status.hp] $= $this.enemy.status.hp - $this.damages
			[if $this.enemy.status.hp <= 0]
				[message] $> ${this.enemy.label//uc1} is dead.
				[goto win]
		[else]
			[message] $> ${this.hero.label//uc1} miss ${this.enemy.label}.
		
		[goto enemy-turn]
	
	[scene enemy-turn]
		[set $this.attackScore] $= $this.enemy.stats.melee + ( 2 D 6 )
		[set $this.defenseScore] $= $this.hero.stats.melee + ( 2 D 6 )
		
		#[message] $> ${this.attackScore} vs ${this.defenseScore}
		
		[if $this.attackScore > $this.defenseScore]
			[set $this.damages] $= $this.enemy.stats.damageBase + ( $this.enemy.stats.damageDice D $this.enemy.stats.damageFaces )
			[message] $> ^R${this.enemy.label//uc1} hit ${this.hero.label} for ${this.damages} hp.
			[set $this.hero.status.hp] $= $this.hero.status.hp - $this.damages
			[if $this.hero.status.hp <= 0]
				[message] $> ${this.hero.label//uc1} is dead.
				[goto lose]
		[else]
			[message] $> ${this.enemy.label//uc1} miss ${this.hero.label}.
			
		[goto hero-turn]
		
	[scene win]
		[message] $> ${this.hero.label//uc1} win the battle.
		[set $this.hero.status.xp] $= $this.hero.status.xp + $this.enemy.stats.xpReward
		[message] $> You gain ${this.enemy.stats.xpReward} xp (=${this.hero.status.xp}).
	
	[scene lose]
		[message] $> ${this.hero.label//uc1} died on the battlefield.
		[lost]

