
[[doctype spellcaster]]

[formula]
	wizard: Zang'dar
	alert: bob
	blah: blih
	allcaps: FUUU
	list:
		- one
		- two
		- three
	list-fr:
		- un
		- deux
		- trois
	version: 0.1.2
	value: 2
	ref: $alert

[spell blah]
	[scroll]
		- echo blah

[spell delayed-echo]
	[scroll]
		- sleep 1
		- echo delayed-echo

[spell fail-dependency]
	[cast]
		- fail-scroll
	[scroll]
		- echo "after fail dependency"

[spell fail-scroll]
	[scroll]
		- exit 1
		- echo "after fail"

[spell kawarimi]
	[scroll]
		- $> echo ${alert//sharg} ${blah//sharg}${blah//sharg} ${list//sharg}

[spell depend]
	[cast]
		- blah
	[summon]
		- spellcast-dependency.txt
	[scroll]
		- echo Dependencies should be rebuilt

[summoning spellcast-dependency.txt]
	[scroll]
		- echo Creating spellcast-dependency.txt
		- echo "This is a dummy static dependency file." > spellcast-dependency.txt

[summoning regex: /.*\.bob/i]
	[summon]
		- spellbook
	[scroll]
		# Kung-Fig should allow another feature in proxy/tag: force filtering in template?
		#- $> echo Creating ${this.summoning}
		- $> echo "This is a dummy regex dependency file." > ${this.summoning}

[summoning *.bill]
	[summon]
		- spellcast-dependency.txt
	
	[scroll]
		# Kung-Fig should allow another feature in proxy/tag: force filtering in template?
		#- $> echo Creating ${this.summoning}
		- $> echo "This is a dummy glob dependency file." > ${this.summoning}



# Reverse summonings are tested after all summonings have been tried.
# The label of the [reverse-summoning] tag is used to summon everything.
[reverse-summoning md2html]
	
	# Need globs, check all files matching the glob, target * use string matching the source *
	# If there are less * on the target, source * are used FROM THE LAST TO THE FIRST
	[mapping]
		../../*.md: build/*.html
		../../doc/*.md: build/doc-*.html
	
	[summon]
		- $> ${this.source}
	
	[chant]
		# fake command
		- $> md2html -o ${this.summoning} ${this.source}



