
'scopeName': 'source.kfg'
'name': 'KFG'
'fileTypes': ['kfg','spellbook']
'patterns': [
	{
		# Meta-Tag
		'match': '^(\\[\\[) *([^ \\]]+) *(?: +([^ \\]](?:[^\\]]*[^ \\]])?) *)?(\\]\\])\\s*(.*)$'
		'captures':
			'1':
				'name': 'punctuation.definition.tag.meta-tag.kfg'
			'2':
				'name': 'entity.name.tag.meta-tag.kfg'
			'3':
				'name': 'entity.other.attribute-name.meta-tag.kfg'
			'4':
				'name': 'punctuation.definition.tag.meta-tag.kfg'
			'5':
				'patterns': [
					{
						'include': '#value-definition'
					}
				]
	}
	{
		# Whole line
		'match': '^([\\t ]*)(\\S.*)$'
		'name': 'meta.line.kfg'
		'captures':
			# Indentation
			'1':
				'name': 'punctuation.whitespace.indentation.kfg'
				'patterns': [
					{
						# Incorrect indentation: mixing tabs and spaces
						'match': '\\t+ +[\\t ]+| +\\t+[\\t ]+'
						'name': 'invalid.illegal.whitespace.kfg'
					}
					{
						# Incorrect space indentation: not a 4-spaces indentation
						'match': '^(    )*( |  |   )$'
						'name': 'invalid.illegal.whitespace.kfg'
					}
				]

			# Line content
			'2':
				'patterns': [
					{
						# Comment
						'match': '^#.*$'
						'name': 'comment.line.number-sign.kfg'
					}
					{
						# Tag
						'match': '^(\\[) *([^ \\]]+) *(?: +([^ \\]](?:[^\\]]*[^ \\]])?) *)?(\\])\\s*(.*)$'
						'captures':
							'1':
								'name': 'punctuation.definition.tag.kfg'
							'2':
								'name': 'entity.name.tag.kfg'
							'3':
								'name': 'entity.other.attribute-name.kfg'
							'4':
								'name': 'punctuation.definition.tag.kfg'
							'5':
								'patterns': [
									{
										'include': '#value-definition'
									}
								]
					}
					{
						# Unquoted property
						'match': '^([^"](?:.*\\S)?)\\s*(:)\\s*(.*)$'
						'captures':
							'1':
								'name': 'variable.other.property.kfg'
							'2':
								'name': 'punctuation.separator.key-value.kfg'
							'3':
								'patterns': [
									{
										'include': '#after-key'
									}
								]
					}
					{
						# List entry
						'match': '^(-)\\s*(.*)$'
						'captures':
							'1':
								'name': 'punctuation.definition.entry.kfg'
							'2':
								'patterns': [
									{
										'include': '#value-definition'
									}
								]
					}
					{
						# Nothing found? this is direct value.
						'include': '#value-definition'
					}
				]

	}
]



'repository':

	'after-key':
		'patterns': [
			{
				'match': '^(?:(\\()([^\\)]*)(\\))\\s*)?(.*)$'
				'captures':
					'1':
						'name': 'punctuation.definition.operator.kfg'
					'2':
						'name': 'entity.name.type.operator.kfg'
					'3':
						'name': 'punctuation.definition.operator.kfg'
					'4':
						'patterns': [
							{
								'include': '#value-definition'
							}
						]
			}
		]

	'value-definition':
		'patterns': [
			{
				'match': '^(?:(<)([a-zA-Z0-9_-]+)(>)\\s*)?(.*)$'
				'captures':
					'1':
						'name': 'punctuation.definition.class.kfg'
					'2':
						'name': 'entity.name.type.class.kfg'
					'3':
						'name': 'punctuation.definition.class.kfg'
					'4':
						'patterns': [
							{
								'include': '#include'
							}
							{
								'include': '#value'
							}
						]
			}
		]

	'include':
		'match': '^(@@?)(.*)$'
		'captures':
			'1':
				'name': 'punctuation.definition.include.kfg'
			'2':
				'name': 'entity.name.include.kfg'

	'value':
		'name': 'meta.value.kfg'
		'patterns': [
			{
				# constants
				'match': '^(null|true|false|on|off|yes|no|NaN|Infinity|-Infinity)\\s*$'
				'name': 'constant.language.kfg'
			}
			{
				# numbers
				'match': '^(-?[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?)\\s*$'
				'name': 'constant.numeric.kfg'
			}
			{
				# quoted string
				'match': '^(")((?:\\\\.|[^"\\\\])*)(")\\s*$'
				'captures':
					'1':
						'name': 'punctuation.string.begin.kfg'
					'2':
						'name': 'string.quoted.double.kfg'
						'patterns': [
							{
								'include': '#escape'
							}
						]
					'3':
						'name': 'punctuation.string.end.kfg'
			}
			{
				# quoted template
				'match': '^(\\$\\$?")((?:\\\\.|[^"\\\\])*)(")\\s*$'
				'captures':
					'1':
						'name': 'punctuation.string.begin.template.kfg'
					'2':
						'name': 'string.quoted.double.template.kfg'
						'patterns': [
							{
								'include': '#escape'
							}
						]
					'3':
						'name': 'punctuation.string.end.template.kfg'
			}
			{
				# quoted template element
				'match': '^(\\$\\$?%")((?:\\\\.|[^"\\\\])*)(")\\s*$'
				'captures':
					'1':
						'name': 'punctuation.string.begin.template.kfg'
					'2':
						'name': 'string.quoted.double.template.kfg'
						'patterns': [
							{
								'include': '#escape'
							}
						]
					'3':
						'name': 'punctuation.string.end.template.kfg'
			}
			{
				# introduced string
				'match': '^(>) (.*)$'
				'captures':
					'1':
						'name': 'punctuation.definition.string.introduced.kfg'
					'2':
						'name': 'string.unquoted.introduced.kfg'
			}
			{
				# introduced template
				'match': '^(\\$\\$?>) (.*)$'
				'captures':
					'1':
						'name': 'punctuation.definition.string.introduced.template.kfg'
					'2':
						'name': 'string.unquoted.introduced.template.kfg'
			}
			{
				# introduced template element
				'match': '^(\\$\\$?%>) (.*)$'
				'captures':
					'1':
						'name': 'punctuation.definition.string.introduced.template.kfg'
					'2':
						'name': 'string.unquoted.introduced.template.kfg'
			}
			{
				# expression
				'match': '^(\\$\\$?=) (.*$)'
				'captures':
					'1':
						'name': 'punctuation.definition.expression.kfg'
					'2':
						'name': 'meta.expression.kfg'
			}
			{
				# ref/variable
				'match': '^(\\$\\$?)([a-zA-Z0-9.\\[\\]_-]*)$'
				'captures':
					'1':
						'name': 'punctuation.definition.variable.kfg'
					'2':
						'name': 'variable.other.kfg'
			}
			{
				# Nothing found? so this is an implicit string
				'match': '^(.*\\S)\\s*$'
				'captures':
					'1':
						'name': 'string.unquoted.kfg'
			}
		]

	'escape':
		'match': '\\\\.'
		'name': 'constant.character.escape.kfg'
