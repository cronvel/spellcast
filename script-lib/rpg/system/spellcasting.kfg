
[[doctype spellcast/book]]

[system rpg:spellcasting]
	
	[fn cast]
		
		# It would be nice to have true constants support in KFG
		[set $local.cast-roll]
			over-power: 8
		
		[if $args.performer.status.mana <= 0]
			[message] $> ${args.performer.name//uc1} has no mana left.
			[return] false
		
		# First, mana consumption
		[set $local.cast-score] $args.usage.compound.mana
		[set $local.consumption-score] $args.usage.params.mana-level
		
		#[message] $> Mana ${local.cast-score} vs ${local.consumption-score}
		
		[set $local.mana]
			$= quantity-roll( $local.cast-score , $local.consumption-score ,
			$=   base: 10 ,
			$=   over-power: 2 ,
			$=   critical-factor: 1.5 ,
			$=   critical-chance: 0.05 ,
			$=   lower-divide: true ,
			$=   round: true
			$= )
		
		[sub $args.performer.status.mana] $local.mana
		
		#[message] $> Mana loss: ${local.mana}
		
		[if $args.performer.status.mana < 0]
			[set $args.performer.status.mana] 0
			[message] $> ${args.performer.name//uc1} used all its mana and miscasts ^/${args.item.name}^:!
			
			# Don't forget to update malus before leaving!
			[call rpg:common/update-malus] $performer
			[return] false
		
		#[message] $> Remaining mana: ${args.performer.status.mana}
		
		
		# Then spellcasting
		[set $local.cast-score] $args.usage.compound.spellcasting
		[set $local.difficulty-score] $args.usage.params.spell-level
		
		[if $args.bonus-factor is-set?]
			[mul $local.cast-score] $args.bonus-factor
		
		#[message] $> Casting ${local.cast-score} vs ${local.difficulty-score}
		
		#[debug info] $> ${args.performer.actual.stats.spellcasting}
		
		# Update malus now, after the score computation
		[call rpg:common/update-malus] $performer
		
		[if ! ( success-roll( $local.cast-score , $local.difficulty-score , ... $local.cast-roll ) )]
			[message] $> ${args.performer.name//uc1} miscasts ^/${args.item.name}^:!
			[return] false
		
		[message] $> ${args.performer.name//uc1} casts ^/${args.item.name}^:!
		[return] true

	