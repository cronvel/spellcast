
[[doctype adventurer]]

[system rpg.spellcasting]
	
	[fn cast]
		
		[if $args.performer.status.mana <= 0]
			[message] $> ${args.performer.label//uc1} has no mana left.
			[return] false
		
		# First, mana consumption
		[set $local.castScore] $= $args.usage.compound.mana + ( 2 D 4 )
		[set $local.vsScore] $= $args.usage.params.manaLevel + ( 2 D 4 )
		
		[set $local.mana] $= ( ( $local.vsScore - $local.castScore ) + ( random ) ) - 0.5
		
		# This is the magic formula that transform consumption levels into real mana point loss, with the correct feeling
		# mana-level = +20 is needed for an instant mana lost
		[set $local.mana] $= round ( 10 * ( 2 ^ ( $local.mana / 6 ) ) )
		
		[sub $args.performer.status.mana] $local.mana
		
		[message] $> Mana loss: ${local.mana}
		
		[if $args.performer.status.mana < 0]
			[set $args.performer.status.mana] 0
			[message] $> ${args.performer.label//uc1} used all its mana and miscasts ^/${args.item.label}^:!
			
			# Don't forget to update malus before leaving!
			[call rpg.common/update-malus] $performer
			[return] false
		
		[message] $> Remaining mana: ${args.performer.status.mana}
		
		
		# Then spellcasting
		[set $local.castScore] $= $args.usage.compound.spellcasting + ( 2 D 8 )
		[set $local.vsScore] $= $args.usage.params.spellLevel + ( 2 D 8 )
		
		#[message] $> ^KSpellcasting: ${args.usage.compound.spellcasting}
		
		[if $args.bonus is-set?]
			[add $local.castScore] $args.bonus
		
		#[message] $> ${local.castScore} vs ${local.vsScore} ${args.bonus}
		#[debug info] $> ${args.performer.actual.stats.spellcasting}
		
		# Update malus now, that the score is already computed
		[call rpg.common/update-malus] $performer
		
		[if $local.castScore < $local.vsScore]
			[message] $> ${args.performer.label//uc1} miscasts ^/${args.item.label}^:!
			[return] false
		
		[message] $> ${args.performer.label//uc1} casts ^/${args.item.label}^:!
		[return] true

	